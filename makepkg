#!/bin/bash
#
# vim ft: shell

set -eu -o pipefail

[ "${DEBUG:=false}" = "true" ] && set -x

print_info() {
    printf "[\033[1;35m+\033[0m] INFO: %s\n" "${1}"
}

print_warn() {
    printf "[\033[1;33m!\033[0m] \033[1;33mWARNING\033[0m: %s\n" "${1}" >&2
}

print_error() {
    printf "[\033[1;34mx\033[0m] \033[1;34mERROR\033[0m: %s\n" "${1}" >&2
    exit 1
}

print_usage() {
    cat <<HEREDOC >&2

  usage: $(basename "${0}") [-qh]

    -q, --quiet         Do not output to stdout
    -h, --help          Print this help and exit

HEREDOC
}

checksum() {
    echo "$1 $2" | sha256sum -c - 2>/dev/null
}

fetch_sources() {
    (
    # shellcheck source=example-package/hello-world/pkg.conf
    source pkg.conf

    print_info "Fetching sources for '$pkgname'"

    dist_file="${dist##*/}"

    if ! checksum "${dist_sha256}" "${dist_file}"; then
        curl -sSfL -o "${dist_file}" "${dist}"
        checksum "${dist_sha256}" "${dist_file}"
    fi

    # Store single-binary dist files in an archive
    if [ "${dist_ext:-}" = "bin" ]; then
        dist_ext=tar.gz
        tar -czf "${dist_file}.${dist_ext}" \
            --transform 's|^|src/|' "${dist_file}"
        dist_file+=".${dist_ext}"
    fi

    orig="${pkgname}_${pkgver}.orig.${dist_ext:-tar.gz}"
    mv "${dist_file}" "${orig}"

    source_dir="${pkgname}-${pkgver}"

    rm -rf "${source_dir}"
    mkdir "${source_dir}"

    tar -xf "${orig}" --strip-components 1 -C "${source_dir}"

    cp -r debian "${source_dir}"/
    )
}

_makepkg() {(
    fetch_sources

    case "${1:-}" in
        -s|-S|--source)
            return
            ;;
    esac

    # Refresh package index for build dependencies
    sudo apt-get update

    # shellcheck source=example-package/hello-world/pkg.conf
    source pkg.conf

    pushd "${pkgname}-${pkgver}"

    print_info "Building package '$pkgname'"

    # Get build deps for package
    sudo apt-get build-dep -y .

    debuild -- clean 2>&1
    # Source package
    debuild --no-lintian -S -uc -us 2>&1
    # Binary package
    debuild --no-lintian -b -uc -us 2>&1

    debuild -- clean 2>&1
)}

while true; do
    shiftpos=2

    case "${1:-}" in
        -q|--quiet)
            exec >> /dev/null
            shiftpos=1
            ;;
        -h|--help)
            print_usage
            exit 0
            ;;
        *) break ;;
    esac

    shift "$shiftpos"
done

_makepkg "$@"
